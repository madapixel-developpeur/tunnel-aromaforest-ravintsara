{% extends 'base_user.html.twig' %}

{% block title %}Commande{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}

    <div class="header_top" style="border:none !important;">
        <div class="container">
            <div class="row align-items-center header-logo-container">
                <a href="/" class="d-flex justify-content-center align-items-center">
                    <img class="header-logo" src="{{ asset('assets/images/af_logo_d2.png') }}" alt="Logo Aroma forest" width="150">
                </a>
            </div>
        </div>
    </div>

    <!--breadcrumbs area start-->
    <div class="breadcrumbs_area">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="breadcrumb_content">
                        <ul>
                            <li><a href="{{ path('app_home') }}">Accueil</a></li>
                            <li>Commande</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--breadcrumbs area end-->

    <!--Checkout page section-->
    <div class="Checkout_section">
        <div class="container">
            <div class="checkout_form">

                <form  method="post" id="checkout_form" data-server-url="{{server_url}}" data-order-type-id="{{order_type_id}}" data-product-id="{{product.id}}" data-product-name="{{product.name}}" data-product-unit-price="{{product.cost}}">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">

                                <h3>Vos informations</h3>
                                <div class="row">

                                    <div class="col-lg-6 mb-20">
                                        <label>Nom <span>*</span></label>
                                        <input type="text" name="lastname" id="lastname" required/>
                                    </div>
                                    <div class="col-lg-6 mb-20">
                                        <label>Prénom <span>*</span></label>
                                        <input type="text" name="firstname" id="firstname" required/>
                                    </div>
                                    <div class="col-lg-6 mb-20">
                                        <label>Téléphone<span>*</span></label>
                                        <input type="text" name="phone" required/>

                                    </div>
                                    <div class="col-lg-6 mb-20">
                                        <label> Adresse e-mail<span>*</span></label>
                                        <input type="text" name="mail" id="mail" required/>

                                    </div>
                                    <div class="col-lg-12 mb-20">
                                        <label>Adresse de livraison</label>
                                        <input type="text" name="delivery_address" id="delivery_address"/>
                                    </div>
                                    <div class="col-lg-6 mb-20">
                                        <label>Code postal</label>
                                        <input type="text" name="postal_code" id="postal_code" />
                                    </div>
                                    <div class="col-6 mb-20">
                                        <label for="country">Ville</label>
                                        <input type="text" name="city" id="city"/>
                                    </div>
                                    <div class="col-lg-12 mb-20">
                                        <label>Adresse de facturation</label><br/>
                                        <input type="checkbox" id="check_same_address" name="check_same_address">
                                        <label for="check_same_address">L’adresse de facturation est la même que l’adresse de livraison</label><br/>
                                        <input type="text" name="billing_address" value="" id="billing_address" />
                                    </div>
                                    <div class="col-lg-6 mb-20">
                                        <label>Code postal</label>
                                        <input type="text" name="billing_postal_code" value="" id="billing_postal_code" />
                                    </div>
                                    <div class="col-6 mb-20">
                                        <label for="country">Ville</label>
                                        <input type="text" name="billing_city" value="" id="billing_city" />
                                    </div>
                                    <div class="col-12 mb-20">
                                        <label for="country">Quantité</label>
                                        <input onchange="refreshProductQuantity()" type="number" name="quantity" id="productQuantity" value="1" required/>
                                    </div>
                                    {# {% if payment_type_id == 2 %}
                                    <div class="col-12 mb-20">
                                        <label for="country">Souscription</label>
                                        <select class="select_option" name="interval_unit" value="month">
                                            <option value="week">Par semaine</option>
                                            <option value="month">Par mois</option>
                                            <option value="year">Par an</option>

                                        </select>
                                    </div>
                                    {% endif %} #}


                                    <div class="col-12 mb-20">
                                        <label for="card-element">Carte de crédit</label>
                                        <div id="card-element" class="form-control">

                                        </div>
                                        <input type="hidden" name="stripe_token" id="stripe_token" />
                                        <div id="card-errors" class="invalid-feedback d-block"></div>
                                    </div>
                                    <div class="col-12">
                                        <div class="order-notes">
                                            <label for="order_note">Notes</label>
                                            <textarea id="order_note" name="order_note"
                                                placeholder="Notes à propos de votre commande, ex: des notes spéciales pour la livraison." style="height : 200px;"></textarea>
                                        </div>
                                    </div>
                                </div>
                        </div>
                        <div class="col-lg-6 col-md-6">
                                <h3>Votre commande</h3>
                                {% if error != null %}
                                        <div class="alert alert-danger p-3 text-center" role="alert">
                                            <div class="alert-body">
                                                {{error}}
                                            </div>
                                        </div>
                                {% else %}
                                    <div>
                                        <img src="{{ product_image }}" style="width:300px; height:auto" alt="">
                                    </div>
                                    <div class="order_table table-responsive">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>Produit</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td> {{product.name}} <strong> × <span class="productQuantity">1</span></strong> <span class="preorder_block">{% if product.preOrder %} (1 Précommande) {% endif %}</span></td>
                                                    <td class="totalCost"> {{product.cost|number_format(2,',')}}€</td>
                                                </tr>
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <th>Sous total</th>
                                                    <td class="totalCost">{{product.cost|number_format(2,',')}}€</td>
                                                </tr>
                                                <tr>
                                                    <th>TVA ({{utils.tva | number_format(0, ',', ' ')}} %)</th>
                                                    <td id="tva" data-tva="{{utils.tva}}">{{((product.cost) * utils.tva / (100 + utils.tva))|number_format(2,',')}} €</td>
                                                </tr>
                                                 <tr>
                                                    <th>Prix net (sans TVA)</th>
                                                    <td id="total-ht">{{((product.cost) / (1.0 + utils.tva/100))|number_format(2,',')}} €</td>
                                                </tr>
                                                <tr>
                                                    <th>Frais de livraison</th>
                                                    <td id="frais-livraison" data-frais="{{utils.fraisLivraison}}" data-prix-min-gratuit="{{utils.prixMinFraisLivraisonGratuit}}">{{fraisLivraison|number_format(2,',')}}€</td>
                                                </tr>
                                                <tr>
                                                    <td colspan="2">Frais de livraison gratuit pour votre commande au-delà de {{utils.prixMinFraisLivraisonGratuit | number_format(2,',')}} €</td>
                                                </tr>
                                               
                                                
                                                <tr class="order_total">
                                                    <th>Prix total (TVA incluse)</th>
                                                    <td><strong class="realTotalCost">{{(product.cost + fraisLivraison)|number_format(2,',')}} €</strong></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                    <div class="payment_method">
                                        <div class="order_button">
                                            <button type="submit" class="d-flex justify-content-center align-items-center bg-color_pink_aroma"  id="checkout-btn">
                                                Commander (<span class="realTotalCost">{{ (product.cost + fraisLivraison)|number_format(2,',')}} €</span>)
                                                <div id="checkout-spinner" class="d-none spinner-border float-right spinner-border-sm ms-2" role="status">
                                                    {# <span class="sr-only">Loading...</span> #}
                                                </div>
                                            </button>

                                        </div>
                                    </div>
                                 {% endif %}
                        </div>
                    </div>
                </form>

            </div>
        </div>
    </div>
    <!--Checkout page section end-->
    <!--shopping cart area end -->


{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script type="text/javascript">
        var qteStockProduct = {{product.produitQteStock.qteStock}};
        var produitEstPrecommande = {% if product.precommande %}true{% else %}false{% endif %};
        function formatPrix(prix){
            let text = new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR' }).format(prix);
            return text;
        }
        function refreshProductQuantity(){
            var form = document.getElementById('checkout_form');
            var totalCostDOM = document.getElementsByClassName("totalCost");
            var productQuantityDOM = document.getElementsByClassName("productQuantity");
            let productQuantityInputDOM = document.getElementById("productQuantity");
            let realTotalCostDOM = document.getElementsByClassName("realTotalCost");
            let fraisLivraisonDOM = document.getElementById("frais-livraison");
            let tvaDOM = document.getElementById("tva");
            let totalHtDOM = document.getElementById("total-ht");
            let prixMinGratuit = parseFloat(fraisLivraisonDOM.dataset.prixMinGratuit);
            let frais = parseFloat(fraisLivraisonDOM.dataset.frais);
            let tva = parseFloat(tvaDOM.dataset.tva);

            let unitPrice = parseFloat(form.dataset.productUnitPrice);
            let quantity = parseFloat(productQuantityInputDOM.value);
            if(isNaN(quantity)) return;
            let qtePreCommande = quantity - qteStockProduct;
            if(!produitEstPrecommande && qtePreCommande > 0){
                alert("Stock insuffisant"); 
                return;
            }

            let cost = quantity * unitPrice;
            let fraisLivraison = cost > 0 && cost < prixMinGratuit ? frais : 0 ;
            let totalCost = cost + fraisLivraison;
            let tvaAmount = tva *  cost / (100 + tva);
            let totalHt = cost / (1 + tva/100);

            fraisLivraisonDOM.innerHTML = `${formatPrix(fraisLivraison)}`;
            tvaDOM.innerHTML = `${formatPrix(tvaAmount)}`;
            totalHtDOM.innerHTML = `${formatPrix(totalHt)}`;
            for(let i=0; i<totalCostDOM.length; i++){
                realTotalCostDOM[i].innerHTML = `${formatPrix(totalCost)}`;
            }
            for(let i=0; i<totalCostDOM.length; i++){
                totalCostDOM[i].innerHTML = `${formatPrix(cost)}`;
            }
            for(let i=0; i<productQuantityDOM.length; i++){
                productQuantityDOM[i].innerHTML = `${quantity}`;
            }
            
            if(qtePreCommande > 0){
                $('.preorder_block').html(`( ${qtePreCommande} Précommandes)`);
            }
        }

        $(document).ready(function () {
            var onCheckout = false;
            var checkoutSpinner = document.getElementById("checkout-spinner");
            var checkoutBtn = document.getElementById("checkout-btn");

            var form = document.getElementById('checkout_form');
            var errors = document.getElementById('card-errors');
            var cardElement = document.getElementById('card-element');



            var stripe = Stripe('{{ stripe_public_key }}');
            var elements = stripe.elements();
            var card = elements.create('card');

            var paymentTypeId = "{{payment_type_id}}";

            card.mount('#card-element');
            card.addEventListener('change', function(event) {
                if (event.error) {
                errors.textContent = event.error.message;
                cardElement.classList.add('is-invalid');
                } else {
                errors.textContent = '';
                cardElement.classList.remove('is-invalid');
                }
            });

            form.addEventListener('submit', function(event) {
                event.preventDefault();

                if(paymentTypeId == 1) {
                    checkoutProceed();
                }
                
            });

            
            function checkoutProceed(){
                if(onCheckout) return;
                onCheckout = true;
                let form = document.getElementById('checkout_form');
                let productQuantityInputDOM = document.getElementById("productQuantity");
                let quantity = parseFloat(productQuantityInputDOM.value);
                let productId = parseInt(form.dataset.productId);
                let productName = parseInt(form.dataset.productName);

                let orderTypeId = parseInt(form.dataset.orderTypeId);

                let serverUrl = form.dataset.serverUrl;
                let formData = new FormData(form);
                let data = {
                    "product_id" : "{{product.id}}",
                    "quantity" : quantity,
                    "order_type_id" : "{{order_type_id}}",
                    "payment_type_id" : "{{payment_type_id}}",
                    //"iteration" : 1,
                    "product_name" : "{{product.name}}"
                };
                formData.forEach((value, key) => data[key] = value);

                console.table(data);
                $.ajax({
                    url: serverUrl+"/api/checkout/proceed",
                    method: "POST",
                    data : JSON.stringify(data),
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    beforeSend : function(){
                        checkoutSpinner.classList.remove('d-none');
                        checkoutBtn.disabled = true;

                    },
                    success: function (res) {
                        if(res['META'].status == 200){
                            let order_id = res['DATA']["id"];
                            let stripeIntentSecret = res['DATA']['stripeIntentSecret'];
                            stripe.handleCardPayment(
                                stripeIntentSecret,
                                card
                            ).then((result) => {
                                if (result.error) {
                                    errors.textContent = result.error.message;
                                    form.classList.add('has-error'); 
                                }else if('paymentIntent' in result){
                                    $.ajax({
                                        url: serverUrl+'/api/checkout/pay',
                                        method: 'POST',
                                        contentType: 'application/json; charset=utf-8',
                                        data : JSON.stringify({"order_id": order_id}),
                                        dataType: "json",
                                        success: function(res) {
                                            if(res['META'].status == 200){
                                                alert("Votre commande a été effectuée avec succès.");
                                                form.reset();
                                            } else{
                                                alert(res['META'].message);
                                            }
                                        },
                                        error: function(err){
                                            alert("Le paiement a échoué, veuillez recommencer s'il vous plaît. Si le problème persiste veuillez nous contacter.");
                                            console.error(err);
                                        },
                                        complete: function(){
                                            checkoutSpinner.classList.add('d-none');
                                            checkoutBtn.disabled = false;
                                            onCheckout = false;
                                        }

                                        
                                    })
                                }
                            });     
                        }
                        else{
                            alert(res['META'].message);
                            checkoutSpinner.classList.add('d-none');
                            checkoutBtn.disabled = false;
                            onCheckout = false;
                        }
                        
                    },
                    error: function (err){
                        alert("Le paiement a échoué, veuillez recommencer s'il vous plaît. Si le problème persiste veuillez nous contacter.");
                        console.error(err);
                        checkoutSpinner.classList.add('d-none');
                        checkoutBtn.disabled = false;
                        onCheckout = false;
                    }
                })
            }

            //pageLoaded();

            $( document ).ready(function() {
                _delivery_address = $('#delivery_address');
                _postal_code = $('#postal_code');
                _city = $('#city');


                _billing_address = $('#billing_address');
                _billing_postal_code = $('#billing_postal_code');
                _billing_city = $('#billing_city');

                $("input[id='check_same_address']").on('change', function() {
                    if(this.checked) {
                        _billing_address.val(_delivery_address.val())
                        _billing_postal_code.val(_postal_code.val())
                        _billing_city.val(_city.val())
                    }else{
                        _billing_address.val(null)
                        _billing_postal_code.val(null)
                        _billing_city.val(null)
                    }
                });
            });
        });

        
    </script>
{% endblock %}

